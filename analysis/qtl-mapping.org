#+TITLE: QTL mapping pipeline
#+SETUPFILE: setup.org

* Introduction

  Here, we set up the infrastructure to call mean and variance QTLs.

  We previously [[file:zinb.org][estimated means and dispersions per individual, per gene]]. We
  now fit log linear models for each:

  \[ \ln \mu_{ik} = X \beta_\mu + \epsilon_\mu \]

  \[ \ln \phi_{ik} = X \beta_\phi + \epsilon_\phi \]

  where \(\mu_{ik}, \phi_{ik}\) are the mean and dispersion for individual
  \(i\), gene \(k\), \(X\) is the genotype matrix (\(n \times 1)\), and
  \(\beta_\mu, \beta_\phi\) are the effect sizes (scalar).

* Setup                                                            :noexport:

  #+BEGIN_SRC emacs-lisp
    (org-babel-lob-ingest "/home/aksarkar/.emacs.d/org-templates/library.org")
  #+END_SRC

  #+RESULTS:
  : 1

  #+CALL: ipython3(memory="4G", venv="scqtl") :dir /scratch/midway2/aksarkar/singlecell

  #+RESULTS:
  : Submitted batch job 42305236

  #+BEGIN_SRC ipython
    import functools
    import os.path
    import numpy as np
    import pandas as pd
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[1]:
  :END:

* Genotype processing
  
  ~QTLtools~ reported 0 variants in cis for an unexpected number of genes when
  using the provided genotype file, so reprocess the genotypes to fix it.

  #+BEGIN_SRC sh :dir /project2/gilad/singlecell-qtl/bulk
    sbatch --partition=broadwl --job-name process-geno
    #!/bin/bash
    set -e
    source activate scqtl
    zcat /project/compbio/jointLCLs/genotype/hg19/YRI/vcf/chr{?,??}.hg19.vcf.gz | awk 'BEGIN {print "##fileformat=VCFv4.1"} NR == 1 || ! /CHROM/ {print}' | bgzip >genotypes.vcf.gz
    tabix genotypes.vcf.gz
  #+END_SRC

  #+RESULTS:
  : Submitted batch job 42223832

* Mean-QTL calling

  Read the estimated parameters (phenotypes) then center them.

  #+BEGIN_SRC ipython
    mean = (pd.read_table('/scratch/midway2/aksarkar/singlecell/mean2.txt.gz', sep=' ', index_col=0)
            .transform(lambda x: x - x.mean(), axis=1))
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[8]:
  :END:

  Write out the [[https://qtltools.github.io/qtltools/pages/input_files.html][phenotype file]] for ~qtltools~.

  #+NAME: get-gene-info
  #+BEGIN_SRC ipython
    gene_info = (pd.read_table('/home/aksarkar/projects/singlecell-qtl/data/scqtl-genes.txt.gz')
                 .set_index('gene')
                 .query('source == "H. sapiens"')
                 .query('chr != "hsX"')
                 .query('chr != "hsY"')
                 .query('chr != "hsMT"'))
    gene_info.head()
  #+END_SRC

  #+RESULTS: get-gene-info
  :RESULTS:
  # Out[13]:
  #+BEGIN_EXAMPLE
    chr      start        end      name strand      source
    gene
    ENSG00000000419  hs20   49551404   49575092      DPM1      -  H. sapiens
    ENSG00000000457   hs1  169818772  169863408     SCYL3      -  H. sapiens
    ENSG00000000460   hs1  169631245  169823221  C1orf112      +  H. sapiens
    ENSG00000000938   hs1   27938575   27961788       FGR      -  H. sapiens
    ENSG00000000971   hs1  196621008  196716634       CFH      +  H. sapiens
  #+END_EXAMPLE
  :END:

  #+NAME: write-pheno-def
  #+BEGIN_SRC ipython
    def qtltools_format(row):
      row['#Chr'] = 'chr{}'.format(row['chr'][2:])
      row['gid'] = row.name
      row['pid'] = row.name
      return row

    def write_pheno_file(pheno, gene_info, output_file):
      (gene_info
       .apply(qtltools_format, axis=1)
       .merge(pheno, left_index=True, right_index=True)
       .to_csv(output_file,
               sep='\t',
               columns=['#Chr', 'start', 'end', 'pid', 'gid', 'strand'] + list(pheno.columns),
               header=True,
               index=False,
               index_label=False)
      )
  #+END_SRC

  #+RESULTS: write-pheno-def
  :RESULTS:
  # Out[11]:
  :END:

  #+BEGIN_SRC ipython
    write_pheno_file(mean, gene_info, '/scratch/midway2/aksarkar/singlecell/mean.bed')
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[14]:
  :END:

  Index the phenotype file.

  #+NAME: tabix
  #+BEGIN_SRC sh :var input="mean.bed" :var partition="broadwl" :dir /scratch/midway2/aksarkar/singlecell :eval never-export
    export input=$input
    sbatch --partition=$partition --wait
    #!/bin/bash
    sort -k1,1 -k2,2n -k3,3n $input | bgzip >$input.gz
    tabix -p bed $input.gz
  #+END_SRC

  #+RESULTS: tabix
  : Submitted batch job 42305589

  Run the QTL mapping, using the approximate permutation test implemented in
  ~QTLtools~.

  #+NAME: qtltools
  #+BEGIN_SRC sh :var pheno="mean" :var partition="broadwl" :dir /scratch/midway2/aksarkar/singlecell :eval never-export 
    export pheno=$pheno
    sbatch --partition=$partition -N1 -c16 -J $pheno-qtl -o $pheno-qtl.log
    #!/bin/bash
    source activate scqtl
    module load parallel
    parallel -j16 qtltools cis --vcf /project2/gilad/singlecell-qtl/bulk/genotypes.vcf.gz --bed $pheno.bed.gz --permute=100 --chunk {#} 100 --out $pheno-qtl.{#}.txt ::: $(seq 1 100)
  #+END_SRC

  #+RESULTS: qtltools
  : Submitted batch job 42305657

  Read the results.

  #+BEGIN_SRC ipython
    def read_qtltools_output(pheno):
      file_names = ['{}-qtl.{}.txt'.format(pheno, i) for i in range(1, 101)]
      return (pd.concat([pd.read_table(f, header=None, sep=' ')
                         for f in file_names if os.path.exists(f) and
                         os.path.getsize(f) > 0])
              .rename(columns={i: x for i, x in enumerate(
                ['gene', 'chr', 'start', 'end', 'strand', 'num_vars',
                 'distance', 'id', 'var_chr', 'var_start', 'var_end', 'df',
                 'dummy', 'a', 'b', 'p_nominal', 'beta', 'p_empirical', 'p_beta']
              )})
              .sort_values('p_beta'))
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[15]:
  :END:

  #+BEGIN_SRC ipython
    mean_qtls = read_qtltools_output('mean')
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[16]:
  :END:

  Apply the Benjamini-Hochberg procedure:

  #+BEGIN_SRC ipython
    def bh(df):
      return df['p_beta'] < .05 * np.arange(1, df.shape[0] + 1) / df.shape[0]
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[17]:
  :END:

  #+BEGIN_SRC ipython
    keep_mean_qtls = bh(mean_qtls)
    keep_mean_qtls.sum()
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[18]:
  : 35
  :END:

  #+BEGIN_SRC ipython
    mean_qtls[keep_mean_qtls].merge(gene_info, left_on='gene', right_index=True)[['gene', 'name', 'id', 'beta', 'p_beta']]
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[20]:
  #+BEGIN_EXAMPLE
    gene      name           id      beta        p_beta
    6   ENSG00000163719    MTMR14    rs1438641 -0.178056  1.113220e-85
    37  ENSG00000162623      TYW3   rs28602706 -0.469924  3.853500e-64
    2   ENSG00000165323      FAT3   rs11019873  0.304741  5.130510e-28
    19  ENSG00000013375      PGM3   rs76411140 -0.413721  1.935500e-26
    25  ENSG00000136261      BZW2  rs140111609  0.229461  2.138450e-22
    60  ENSG00000133884      DPF2  rs116180923 -0.892610  1.357080e-12
    31  ENSG00000101003     GINS1  rs117553461 -0.155267  1.357910e-11
    23  ENSG00000145604      SKP2   rs10063618 -0.663646  1.424240e-10
    7   ENSG00000166557     TMED3   rs10519274 -0.257261  9.518380e-10
    3   ENSG00000258289    CHURC1       rs8943 -0.184327  1.353480e-09
    12  ENSG00000113558      SKP1    rs2110585 -0.254785  1.218800e-08
    3   ENSG00000132507     EIF5A   rs28636077 -0.347747  1.630960e-08
    24  ENSG00000197345    MRPL21    rs2444765 -0.306477  3.740190e-08
    27  ENSG00000125450     NUP85    rs7216538 -0.196893  5.696300e-08
    19  ENSG00000114098     ARMC8  rs137911898 -0.387751  1.566310e-07
    54  ENSG00000149636      DSN1   rs75741568 -1.160820  5.967950e-07
    14  ENSG00000131469     RPL27     rs691997 -0.256838  6.878420e-07
    19  ENSG00000188846     RPL14    rs2276868 -0.294612  6.934550e-07
    45  ENSG00000153006  SREK1IP1    rs3756739 -0.228774  7.929660e-07
    23  ENSG00000163743     RCHY1   rs77289963 -0.149948  8.327720e-07
    31  ENSG00000167196    FBXO22   rs58829645 -0.455050  2.465320e-06
    20  ENSG00000214941    ZSWIM7   rs61374610  0.405601  3.606540e-06
    22  ENSG00000008324    SS18L2    rs3774396  0.130177  3.976200e-06
    12  ENSG00000138160     KIF11  rs111760303 -0.414358  5.566760e-06
    51  ENSG00000171202  TMEM126A   rs78417512  0.214181  7.301260e-06
    1   ENSG00000170291      ELP5    rs2654190 -0.281837  2.730180e-05
    7   ENSG00000183648    NDUFB1    rs7151027 -0.133751  3.359160e-05
    33  ENSG00000151725     CENPU     rs873687  0.214583  3.977640e-05
    22  ENSG00000008988     RPS20   rs16920295 -0.155873  4.080270e-05
    28  ENSG00000136908      DPM2    rs3780666 -0.112947  7.454780e-05
    4   ENSG00000106853     PTGR1    rs7030900 -0.350006  1.564970e-04
    24  ENSG00000138757     G3BP2    rs6830063 -0.160755  2.030550e-04
    21  ENSG00000171311    EXOSC1  rs150672414 -0.137090  2.531660e-04
    20  ENSG00000073712    FERMT2   rs79469134  0.150080  3.481460e-04
    33  ENSG00000145725   PPIP5K2      rs32840  0.168351  4.349820e-04
  #+END_EXAMPLE
  :END:

* Dispersion-QTL calling

  Read the estimated parameters and center them.

  #+BEGIN_SRC ipython
    disp = (pd.read_table('/scratch/midway2/aksarkar/singlecell/dispersion2.txt.gz', sep=' ', index_col=0)
            .transform(lambda x: x - x.mean(), axis=1))
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[21]:
  :END:

  #+BEGIN_SRC ipython
    write_pheno_file(disp, gene_info, '/scratch/midway2/aksarkar/singlecell/disp.bed')
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[22]:
  :END:

  Index the phenotype file.

  #+CALL: tabix(input="disp.bed")

  #+RESULTS:
  : Submitted batch job 42306096

  Run ~qtltools~.

  #+CALL: qtltools(pheno="disp")

  #+RESULTS:
  : Submitted batch job 42306172

  Read the output.

  #+BEGIN_SRC ipython
    disp_qtls = read_qtltools_output('disp')
    keep_disp_qtls = bh(disp_qtls)
    keep_disp_qtls.sum()
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[23]:
  : 71
  :END:

  #+BEGIN_SRC ipython
    disp_qtls[keep_disp_qtls].merge(gene_info, left_on='gene', right_index=True)[['gene', 'name', 'id', 'beta', 'p_beta']]
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  # Out[25]:
  #+BEGIN_EXAMPLE
    gene     name           id      beta        p_beta
    3   ENSG00000172500     FIBP    rs2904964  3.269360  5.982850e-59
    30  ENSG00000173812     EIF1  rs141050869  2.236620  4.159740e-36
    30  ENSG00000170558     CDH2   rs61062435 -3.124730  5.966380e-21
    19  ENSG00000136603     SKIL    rs9818860 -3.706300  1.497410e-20
    14  ENSG00000109919    MTCH2  rs112598354 -3.852610  8.516750e-20
    11  ENSG00000138385      SSB   rs74671773 -1.864580  7.731550e-16
    9   ENSG00000174721   FGFBP3  rs187269100 -3.340610  1.541350e-14
    4   ENSG00000184640    SEPT9  rs191371465 -1.613220  5.537410e-13
    6   ENSG00000005955   GGNBP2  rs115379718 -1.710560  6.033150e-13
    17  ENSG00000163430    FSTL1  rs116138205 -3.701820  6.574070e-13
    47  ENSG00000159596   TMEM69   rs80159866 -2.123730  1.515510e-10
    3   ENSG00000077782    FGFR1  rs114441110 -2.509560  4.331400e-10
    28  ENSG00000145592    RPL37  rs187287478 -1.854770  5.122680e-10
    6   ENSG00000122483   CCDC18  rs114147805 -3.600390  5.673670e-09
    35  ENSG00000164111    ANXA5  rs115667801 -1.147140  1.413170e-08
    38  ENSG00000125977   EIF2S2   rs11696530 -0.964617  1.653160e-08
    20  ENSG00000113658    SMAD5   rs76508606 -3.901540  3.115330e-08
    29  ENSG00000115947     ORC4  rs149751455 -3.032940  5.041500e-08
    49  ENSG00000205302     SNX2  rs148079226 -2.528050  1.294880e-07
    16  ENSG00000155099  TMEM55A  rs143924177 -2.212820  1.463260e-07
    24  ENSG00000099995    SF3A1  rs183441901 -2.124210  1.815250e-07
    20  ENSG00000138778    CENPE  rs115865776 -2.262560  4.304580e-07
    14  ENSG00000163535    SGOL2  rs186627329 -0.768620  4.388750e-07
    30  ENSG00000166794     PPIB  rs138296314 -2.078340  5.791490e-07
    19  ENSG00000104765   BNIP3L   rs17055905 -1.117420  6.768970e-07
    10  ENSG00000181192   DHTKD1  rs186223298 -1.268940  1.822810e-06
    23  ENSG00000049449     RCN1   rs61891674 -3.869610  2.008800e-06
    0   ENSG00000110955    ATP5B   rs11172053 -4.315500  2.393400e-06
    25  ENSG00000166483     WEE1  rs141629226 -3.647780  2.537660e-06
    27  ENSG00000076003     MCM6   rs77680868 -2.576420  8.176020e-06
    ..              ...      ...          ...       ...           ...
    24  ENSG00000167088   SNRPD1     rs599489 -3.443700  3.313140e-05
    40  ENSG00000132676     DAP3  rs113643555 -3.610080  3.764670e-05
    48  ENSG00000171858    RPS21  rs113006457 -1.777300  3.930040e-05
    21  ENSG00000188994   ZNF292  rs190797589 -2.552210  4.493770e-05
    38  ENSG00000118363    SPCS2  rs111846212 -2.637530  5.210370e-05
    14  ENSG00000104738     MCM4   rs67441342  1.010130  6.201410e-05
    4   ENSG00000166012    TAF1D  rs114156459 -2.464560  6.227290e-05
    20  ENSG00000111300    NAA25  rs183463906 -1.903450  7.658170e-05
    13  ENSG00000162694    EXTL2  rs114515441 -2.430710  8.293420e-05
    22  ENSG00000143543      JTB  rs145970450 -2.513580  8.404170e-05
    36  ENSG00000123737   EXOSC9   rs72684801 -4.150150  8.928880e-05
    24  ENSG00000160049     DFFA  rs191456265 -1.834670  9.046540e-05
    21  ENSG00000103353    UBFD1  rs187686990 -3.084110  1.050590e-04
    26  ENSG00000069849   ATP1B3  rs181098445 -2.219060  1.351460e-04
    9   ENSG00000112305    SMAP1    rs3805977 -1.484410  1.355490e-04
    26  ENSG00000133027     PEMT  rs149534292 -3.130120  1.362530e-04
    25  ENSG00000172586   CHCHD1  rs150231882 -1.491500  1.570080e-04
    41  ENSG00000152904    GGPS1   rs77412086 -3.326680  1.738940e-04
    11  ENSG00000112695   COX7A2  rs116524695 -1.969520  2.009070e-04
    28  ENSG00000143575     HAX1  rs191047822 -3.161070  2.198430e-04
    28  ENSG00000116489   CAPZA1  rs112268692 -1.440870  2.665790e-04
    13  ENSG00000137807    KIF23  rs146358835 -3.455250  2.677390e-04
    17  ENSG00000113328    CCNG1   rs61114041 -1.741340  3.823830e-04
    30  ENSG00000148773    MKI67  rs114309437 -1.111450  4.412160e-04
    23  ENSG00000184076   UQCR10  rs140062784 -2.846960  4.843060e-04
    38  ENSG00000112335     SNX3  rs146420004 -2.824480  5.119260e-04
    5   ENSG00000145907    G3BP1   rs78692171 -0.997360  6.671770e-04
    22  ENSG00000162923    WDR26   rs56887412 -1.836620  7.486450e-04
    47  ENSG00000065361    ERBB3   rs12314191 -1.623870  7.577620e-04
    14  ENSG00000173145    NOC3L   rs74151073 -2.267200  8.821250e-04

    [71 rows x 5 columns]
  #+END_EXAMPLE
  :END:
